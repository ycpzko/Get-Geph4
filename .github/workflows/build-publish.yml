#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build geph4 CLINET

on:
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/geph-official/geph4.git
  REPO_BRANCH: master
  UPLOAD_OUTPUT: false
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq install \
        curl \
        clang \
        gcc \
        g++ \
        zlib1g-dev \
        libmpc-dev \
        libmpfr-dev \
        libgmp-dev \
        build-essential
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /geph4
        sudo chown $USER:$GROUPS /geph4
        curl -sSL https://get.docker.com/ | sudo sh
        cargo install cross
        export PATH=~/.cargo/bin:$PATH
    - name: Clone source code
      working-directory: /geph4
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH geph4

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}


    - name: Compile the bin
      id: compile
      run: |
        cd geph4
      cross build --release --locked --target i686-pc-windows-gnu --manifest-path=geph4-client/Cargo.toml
      cross build --release --locked --target x86_64-unknown-linux-musl --manifest-path=geph4-client/Cargo.toml
      cross build --release --locked --target x86_64-unknown-linux-gnu --manifest-path=geph4-vpn-helper/Cargo.toml
      cross build --release --locked --target armv7-linux-androideabi --manifest-path=geph4-client/Cargo.toml
      cross build --release --locked --target aarch64-linux-android --manifest-path=geph4-client/Cargo.toml
      cross build --release --locked --target armv7-unknown-linux-musleabihf --manifest-path=geph4-client/Cargo.toml
      cross build --release --locked --target aarch64-unknown-linux-musl --manifest-path=geph4-client/Cargo.toml
      mkdir OUTPUT
      mv target/x86_64-unknown-linux-musl/release/geph4-client OUTPUT/geph4-client-linux-amd64
      mv target/x86_64-unknown-linux-gnu/release/geph4-vpn-helper OUTPUT/geph4-vpn-helper-linux-amd64
      mv target/armv7-unknown-linux-musleabihf/release/geph4-client OUTPUT/geph4-client-linux-armv7
      mv target/armv7-linux-androideabi/release/geph4-client OUTPUT/geph4-client-android-armv7
      mv target/aarch64-linux-android/release/geph4-client OUTPUT/geph4-client-android-aarch64
      mv target/i686-pc-windows-gnu/release/geph4-client.exe OUTPUT/geph4-client-windows-i386.exe
      mv target/x86_64-apple-darwin/release/geph4-client OUTPUT/geph4-client-macos-amd64
      mv target/aarch64-unknown-linux-musl/release/geph4-client OUTPUT/geph4-client-linux-aarch64
    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: geph4_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: geph4/OUTPUT



    - name: Upload bin to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
